unit Main;

interface

uses
  Windows, SysUtils, Messages, Classes, Graphics, Controls,
  Forms, Dialogs, Menus, StdCtrls;

type
  TMainForm = class(TForm)
    MainMenu1: TMainMenu;
    FileMenu: TMenuItem;
    FileExit: TMenuItem;
    LevelMenu: TMenuItem;
    Level1: TMenuItem;
    Level2: TMenuItem;
    Level3: TMenuItem;
    Level4: TMenuItem;
    Level5: TMenuItem;
    Level6: TMenuItem;
    Level7: TMenuItem;
    Level8: TMenuItem;
    Level9: TMenuItem;
    ShowButton: TButton;
    N1: TMenuItem;
    LevelInsert: TMenuItem;
    procedure FileExitClick(Sender: TObject);
    procedure LevelClick(Sender: TObject);
    procedure ShowButtonClick(Sender: TObject);
    procedure LevelInsertClick(Sender: TObject);
  private
    { Private declarations }
    function GetLevel: Integer;
  public
    { Public declarations }
  end;

var
  MainForm: TMainForm;

implementation

{$R *.DFM}

const
  highLevel = 9;   { Highest level command }

procedure TMainForm.FileExitClick(Sender: TObject);
begin
  Close;
end;

procedure TMainForm.LevelClick(Sender: TObject);
var
  I: Integer;
begin
  with LevelMenu do
    for I := 0 to highLevel - 1 do
      Items[I].Checked := False;
  TMenuItem(Sender).Checked := True;
end;

function TMainForm.GetLevel: Integer;
var
  I: Integer;
begin
  GetLevel := -1;
  with LevelMenu do
    for I := 0 to highLevel - 1 do
      if Items[I].Checked then
        GetLevel := I + 1;
end;

procedure TMainForm.ShowButtonClick(Sender: TObject);
var
  S: string;
begin
  S := 'Level = ' + IntToStr(GetLevel) + ' -- Insert:';
  if LevelInsert.Checked
    then S := S + 'ON'
    else S := S + 'OFF';
  ShowMessage(S);
end;

procedure TMainForm.LevelInsertClick(Sender: TObject);
begin
  with Sender as TMenuItem do
    Checked := not Checked;
end;

end.

