

















	    П А	К Е Т	  П Р И	К Л А Д	Н Ы Х	   П Р О Г Р А М М


			   W1Э	В Р И К	АW0







		       Справочно-методическое пособие
























			       1990

			    2



			СОДЕРЖАНИЕ


	  Назначение и область применения...............4

1.	 Требования к технической и операционной среде..5

2.	 Настройка ППП на ПЭВМ пользователя.............5

3.	 Запуск	пакета на выполнение....................7

4.	 Выход в ДОС....................................7

5.	 Помощь.........................................8

6.	 Интерфейс с пользователем......................8

7.	 Главное меню...................................9

8.	 Окна...........................................9

9.	 Проблемные и программные файлы.................10

10.	 Описание проблемы..............................11

11.	 Меню "File"....................................11

12.	 Редактирование	проблемы........................13

13.	 Переменные и константы.........................15

14.	 Выражения и встроенные	функции.................16

15.	 Установки ЭВРИКИ...............................18

16.	 Ограничения	на    переменные   (функции).

	 Директивы......................................19

17.	 Решение проблемы...............................20

18.	 Несколько простых примеров.....................21

19.	 Отчет о проблеме...............................24

20.	 Вывод графика и списка	значений функции........24

21.	 Режимы	работы ЭВРИКИ...........................25

22.	 Работа	с окнами................................26

23.	 Калькулятор....................................27


			    3



24.	 Управление функциональными клавишами...........27

ПРИЛОЖЕНИЕ 1. Сообщения	о ошибках.......................29

ПРИЛОЖЕНИЕ 2. Примеры использования ЭВРИКИ..............37


			    4



	     Назначение	и область применения

     ППП   ЭВРИКА   предназначен   для	 решения   сложных
уравнений,    систем   уравнений   и   неравенств,   задач
максиминизации,	  вычисления   производных  и  интегралов,
построения  графиков функций и многих других задач области
математического	 моделирования,	 прикладной  математики	 и
инженерии.
     Наилучший	эффект	применение ППП Эврика даст в таких
областях как:
     -математическое   моделирование  в	 области  науки	 и
техники	- создание формальных моделей и	их решение;
     -обучение	- изучение информатики и естественных наук
с решением задач с помощью ППП ЭВРИКА;
     -применение ППП ЭВРИКА как	прикладного инструментария
инженерами и научными работниками.
     Важнейшими	     достоинствами     пакета	  являются
естественность	 входного  языка,  простота  интерфейса	 с
конечным  пользователем	 непрограммистом.  Даже	если вы	не
являетесь  специалистом	 по  вычислительным машинам ЭВРИКА
может  помочь  вам быстро решать прикладные математические
задачи	 без   необходимости  изучения	численных  методов
аппроксимации.	 ЭВРИКА	  также	  легка	  для  изучения	 и
использования, как и ручной калькулятор.

			    5



     1.	Требования к технической и операционной	среде

     ППП  ЭВРИКА  работает  на персональных ЭВМ	(ПЭВМ) IBM
PC/XT/AT,  PS/2	 и  совместимых	 с  ними  под  управлением
операционной системы MS	DOS версии 2.0 и старше. Требуемый
объем	оперативной   памяти  -	 не  менее  384К.  Если	 в
конфигурации  ПЭВМ  имеется математический сопроцессор,	то
он используется	пакетом. Требуется хотя	бы один	накопитель
на  гибких  дисках  (360К  и  более) или жесткий диск типа
"Винчестер".  Возможно	использование  алфавитно-цифрового
монитора. Если имеется графический монитор (CGA, Hercules,
EGA,  VGA),  то	 диаграммы  могут выводиться в графическом
режиме.	 Для  печати отчетов и графиков	требуется принтер,
совместимый с Epson.



	2. Настройка ППП на ПЭВМ пользователя

     Перед   работой   с  программами  необходимо  сделать
резервную   копию   дистрибутива,   используя  стандартные
средсва	 MS  DOS.  Заклейте  окно  защиты записи дискеты с
дистрибутивом  и  сохраните  ее.  Для  работы  используйте
копии.	При  работе  с	жестким	 диском	 создайте  на  нем
директорию   и	скопируйте  туда  файлы	 с  дистрибутивной
дискеты.
     Настройка	ППП ЭВРИКА выполняется с помощью программы
EINSТ. Для запуска на выполнение этой программы	необходимо
установить  дискету  с	ППП  ЭВРИКА  на	 дисковод, сделать
данный	 дисковод   текущим,  сделать  текущей	директорию
Еureca,	напечатать
			  EINST
и нажать клавишу Еnter.
     После   загрузки  программы  на  экран  выводится	ее
главное	 меню (меню установок),	которое	включает следующие
альтернативы:
     - Еureca directory	(Директория);
     - Text editor commands (Команды редактора);
     - Default edit modes (Режимы редактора);
     - Screen modes (режимы экрана);
     - Quit (Выход).
     Выбор  нужной  альтернативы  можно	выполнить одним	из
двух  способов.	 Во-первых,  испoльзуя клавиши перемещения
курсора	 (клавиши  направления),  можно	 указать требуюмую
альтернативу  и	 нажать	 клавишу  Еnter.  Во-вторых, можно
нажать	ту  клавишу,  которая  обозначена большой буквой в
требуемой  вам альтернативе. Выбранной (текущей) считается
альтернатива, выделяемая на экране в текущий момент цветом
или инверсией (в зависимости от	типа терминала).

     При  выборе  альтернативы "Еureca directory" на экран
выводится   окно   с   наименованием  пути  к  директории,

			    6


содержащей  файл  помощи  и  проблемные	 файлы ЭВРИКИ (см.
ниже).	 Вы   должны  оставить	имя  этой  директории  без
изменения,  нажав  клавишу  Еnter, или ввести новый путь и
имя  директории,  напечатав  их	 в  строке и нажав клавишу
Еnter.	 При   вводе   вы   можете   использовать  клавиши
редактирования,	определенные в редакторе. По умолчанию имя
директории,  содержащей	 файл  помощи и	проблемные файлы -
INGER.
     После  выбора  альтернативы "Text editor commands"	на
экран  выводится  перечень  команд  редактора  ЭВРИКИ.	Вы
можете	изменить  назначение управляющих клавиш	редактора,
назначить  для	каждой команды определенную клавишу или	их
комбинацию.  Вначале  укажите требуюмую	команду	редактора.
Для  указания  используйте  клавиши  PgUp,  PgDn,  стрелка
вверх,	стрелка	вниз. Текущая команда редактора	выделяется
на  экране  цветом  (инверсией).  После	указания требуемой
команды	 нажмите  клавишу  Еnter.  Вслед  за  этим  курсор
переместится  в	правую часть строки и вам будет	необходимо
нажать	ту  клавишу  (последовательно  несколько  клавиш),
которую	 вы хотите назначить для данной	команды	редактора.
В  строке будут	загораться условные обозначения	нажимаемых
клавиш.	 Для завершения	ввода управляющих клавиш по данной
команде	 нажмите  клавишу ESC. Если вы хотите восстановить
установки команд редактора, принятые по	умолчанию, введите
большую	 букву R. После	этого все команды редактора примут
назначение   управляющих  клавиш,  которое  они	 имели	по
умолчанию.
     При  выборе в главном меню	альтернативы "Default edit
modes"    на    экран   выводится   меню   со   следующими
альтернативами:
     - Insert mode ON (режим вставки включен);
     - Auto-indent   mode   ON	 (режим	  автовыравнивания
включен);
     - Tabs (табуляция включена).
     Вам  необходимо задать режим редактора, который будет
устанавливаться	 по  умолчанию,	 после загрузки	редактора.
Каждый	из  режимов  может  быть включен (ON) или выключен
(OFF).	 Назначение   режимов	ясно  из  их  наименований
(вставка/замена,    с	автоматическим	 выравниванием/без
автоматического	   выравнивания,    обрабатывать   символы
табуляции/не обрабатывать символы табуляции). Смена режима
редактора  производится	 одним из двух способов. Вы можете
указать	 требуюмую  альтернативу  меню,	 используя клавиши
направления,  а	затем осуществить выбор	требуемого режима,
нажимая	 клавишу  Еnter.  Вы  также можете нажать клавишу,
которая	   обозначена	 большой    буквой   в	 требуемой
альтернативе.  При  каждом нажатии этой	клавиши	происходит
смена	режима	 редактора.   Изменение	 режима	 редактора
отображается в строке соответствующей альтернативы меню. В
ней  выводится	- ON (включено)	или OFF	(выключено). После
изменения  режимов редактора для возврата в меню установок
нажмите	клавишу	ESC.
     После  выбора  в  меню установок альтернативы "Screen
modes" выводится меню со следующим перечнем альтернатив:
     - Default (умолчание);

			    7


     - Color (цветной);
     - Black and white (черно-белый);
     - Monochrome (монохромный).
     Альтернатива  "Default"  означает,	 что тип терминала
будет	будет	браться	  по   умолчанию.   Остальные  три
альтернативы  задают тип терминала в явном виде. Установка
режима	экрана также может выполняться двумя способами.	Вы
можете	указать	 требуюмую  альтернативу  меню,	 используя
клавиши	 направления,  а затем нажать клавишу Еnter. После
того выбранный режим будет установлен и	произойдет возврат
в  главное  меню.  Вы можете также нажать клавишу, которая
обозначена  большой  буквой  в требуемой вам альтернативе.
После	нажатия	  этой	 клавиши   выбранный  режим  будет
установлен  и произойдет возврат в меню	установок. Если	вы
не  хотите  менять  режим  экрана,  то	можете вернуться в
главное	меню, нажав клавишу ESC.
     Для  завершения  работы  с	 программой первоначальной
установки  ППП	ЭВРИКА необходимо выбрать в меню установок
альтернативу "Quit". При этом, если выполнялись	какие-либо
модификации, программа запрашивает, сохранять ли сделанные
модификации.  Вы  можете  сохранить их,	нажав клавишу "Y",
или  не	 сохранять,  нажав  в  ответ  на  данное сообщение
клавишу	"N".
     При  работе с программой первоначальной установки ППП
ЭВРИКА	в текущей директории текущего дискового	устройства
должен	находиться  файл  EUREKA.EXE  (он  входит в состав
дистрибутива).



	   3. Запуск пакета на выполнение

     Для   вызова  на  выполнение  ППП	ЭВРИКА	необходимо
сделать	  текущими  дисковое  устройство  и  директорию	 с
программами,  напечатать в ответ на подсказку операционной
системы	(ДОС) команду
			  EUREKA
и нажать клавишу Еnter.
     После загрузки программы в	оперативную память (ОП)	на
экран выводится	главное	меню ППП.



		   4. Выход в ДОС

     Для  выхода  из  программы	 в  ДОС	 требуется  нажать
клавишу	 "F", а	затем клавишу "Q", что соответствует также
нажатию	  клавиши   Еnter  при	указании  в  главном  меню
альтернативы  "File"  и	 затем	нажатию	 клавиши Еnter при
указании  в  меню  "File"  альтернативы	 "Quit". Указанные
альтернативы  выбираются с помощью клавиш направления. При
таком	 выходе	   ЭВРИКА    запрашивает,   сохранить	ли
модифицированный  проблемный  файл.  Чтобы  избежать этого
вопроса	и выйти	в ДОС нажмите клавиши ALT-Х (удерживая ALT
нажать Х).

			    8



		      5. Помощь

     В	 любой	 момент	  работы   с   ЭВРИКОЙ	вы  можете
воспользоваться	  помощью  программы.  Для  вызова  помощи
требуется нажать клавишу "F1", для возврата в программу	из
помощи	 нажмите   клавишу  ESC.  После	 вызова	 помощи	 в
специальном   окне   на	  экране   выводится   информация,
объясняющая   текущее	состояние  программы  и	 возможные
действия  пользователя.	 Некоторые  понятия  данного  окна
также  могут требовать пояснения. Такие	слова выделяются в
окне экрана аналогично выделению альтернатив меню. Если	вы
хотите	получить  более	 подробную информацию о	каком-либо
понятии,   то  необходимо  указать  это	 слово,	 используя
клавиши	 направления,  а затем нажать клавишу Еnter. Таким
способом   можно   перемещаться	 по  помощи,  знакомясь	 с
пакетом.



	    6. Интерфейс с пользователем

     Работа  пользователя  с программой	логически и просто
реализуется   через  меню.  Одно  из  этих  меню,  которое
выводится  сразу  же после успешной загрузки ППП в верхней
строке	 экрана	 и  расположено	 горизонтально	называется
главным	меню ЭВРИКИ. Прочие меню программы, вызываемые при
выборе	альтернативы  другого меню, называются подменю или
меню низшего уровня.
     Каждое  из	 меню  состоит	из альтернатив,	количество
которых	 не  менее двух. Одна из альтернатив меню выделена
цветом	или  инверсией.	 Эта  альтернатива в данный момент
времени	является текущей.
     Сделать	текущей	  другую   альтернативу	  (указать
альтернативу)  можно двумя способами. Во-первых, вы можете
использовать  клавиши  направления (стрелка вверх, стрелка
вниз,  стрелка	вправо,	стрелка	влево).	При каждом нажатии
клавиши	направления текущей будет становиться очередная	(в
соответствии с выбранным направлением) альтернатива. После
указания  требуемой  альтернативы  вы  можете  выбрать ее,
нажав  клавишу	Еnter. Во-вторых, вы можете сделать нужную
альтернативу  текущей и	выбрать	ее, нажав клавишу, которая
обозначена  большой буквой в требуемой вам альтернативе. В
названии   каждой   альтернативы  содержится  только  одна
большая	буква (обычно первая).
     После   выбора   альтернативы  выполняется	 некоторое
действие,   предусмотренное   данной   альтернативой   или
выводится   меню   следующего	уровня	с  перечнем  новых
альтернатив.   Возврат	 в   меню  более  высокого  уровня
выполняется после нажатия клавиши ESC.

			    9


		   7. Главное меню

     Главное  меню  ЭВРИКИ  расположено	 в  верхней строке
экрана	 горизонтально	 и   включает	в  себя	 следующие
альтернативы:
     - File (файл);
     - Edit (редактор);
     - Solution	(решение);
     - Commands	(команды);
     - Report (отчет);
     - Graph (график);
     - Options (режимы);
     - Windows (oкна).

     Данное   меню  выводится  на  экран  сразу	 же  после
успешной  загрузки  ЭВРИКИ в ОП. При этом текущей является
альтернатива  "File".  Изменение  текущей  альтернативы	 и
выбор альтернативы выполняются как это описано выше.



		       8. Окна
     Работа с данными в	ЭВРИКЕ организована через экранные
окна.  Окна  будем  делить  на	"старшие"  или	основные и
дополнительные	 или   информационные.	 К  старшим  окнам
относятся:
     - окно редактора;
     - окно решения;
     - окно верификации;
     - окно отчета;
     - окно графика;
     - окно списка.
     Редактировать  данные можно только	в старших окнах, в
текущем	окне. Активное окно имеет на экране двойную рамку.
В  данный  момент  времени активным может быть только одно
окно.  Можно  изменить	размер	окна,  переместить его или
сделать	невидимым, используя меню окон (см. раздел "Работа
с  окнами") или управляющие клавиши. Для изменения размера
или  перемещения  текущего  окна  нажмите  клавишу "Scroll
Lock". Обозначение этой клавиши загорится в нижней строке,
одновременно  изменятся	и подсказки в нижней строке. После
этого  измените	 размер	 текущего  окна,  нажимая  клавиши
направления, или переместите его в требуемое место экрана,
нажимая	клавиши	направления вместе с клавишей "Shift". Для
выхода	из  этого  режима  снова  нажмите  клавишу "Scroll
Lock".  Вы можете увеличить текущее окно до размеров всего
экрана,	нажав клавишу "F5". Повторное нажатие этой клавиши
вернет экран в исходное	состояние.
     Назначение	окон ясно из их	названия. В окне редактора
можно  создать и редактировать файлы уравнений (проблемные
файлы),	 используя  встроенный	редактор  ЭВРИКИ.  В  окне
решения	выводится решение проблемного файла (проблемы, для

			    10


краткости),  список значений всех переменных и вычисленных
функций.  Если	уравнения  не  решаются	 точно,	 выводится
максимальная   ошибка	(погрешность).	 Окно  верификации
используется  для контроля решения. В нем выводятся правые
и  левые  части	 уравнений  и  их  различие. В окне отчета
выводится  отчет  о  проблеме. Если отчет не пустой, то	он
содержит  проблему,  ее	 решение,  а также может содержать
другие	старшие	окна, если они не пустые. В окне диаграммы
выводится  график  выбранной  (заданной)  функции.  В окне
списка	выводятся значения функции для заданного диапозона
и шага.
     Дополнительные  окна  ЭВРИКИ предназначены	для вывода
сообщений информационного характера. К ним относятся:
     - промежуточное окно;
     - окно ошибок.
     Промежуточное   окно   выводится	во  время  решения
проблемы.  В  нем oтображается прошедшее время в секундах,
приближенное   значение	  текущей  погрешности	и  текущее
значение  переменных,  которые	ЭВРИКА	вычисляет.  В окне
ошибки	выводятся  сообщения  об ошибках, которые не могут
быть  исправлены  при  редактировании  проблемного  файла.
Часто  в  окне	ошибки	выводится сообщение, продолжать	ли
данную операцию- "Retry? (Y/N)". Нажмите клавишу "Y", если
хотите	продолжить, или	"N", eсли хотите прекратить данную
операцию.  Перечень данных сообщений приведен в	приложении
1  данного  руководства. Дополнительные	окна не	могут быть
активными.  Чтобы  убрать  данное  окно	с экрана требуется
нажать клавишу ESC.
     Для  переключения	активных  окон используйте клавишу
"F6".  Активным	 при  этом становится следующее	по порядку
открытое  окно.	Окна могут занимать равные части на экране
или  находиться	 в  "стеке".  Для  информации  см.  раздел
"Работа с окнами".



	  9. Проблемные	и программные файлы

     Проблемные	   файлы    содержат   описание	  проблемы
(уравнения).  Расширение имени у таких файлов по умолчанию
.ЕКА.  По  умолчанию  ЭВРИКА  ищет проблемные файлы и файл
помощи	(HELP.ЕКА) в директории	проблемных файлов с именем
INGER.
     Программные файлы ЭВРИКИ:
     - EUREKA.EXE - основной выполняемый файл;
     - EUREKA.LOG - дополнительный файл;
     - EUREKA.MAC - файл макрокоманд;
     - CONFIG.EKA   -  файл  конфигурации  (создается  при
работе).
     По	 умолчанию  ЭВРИКА  считает,  что проблемные файлы
находятся  в  текущей  директории  с именем EURECA. Там	же
может	 находиться    и    специальный	  файл	 установок
(INITIAL.EKA),	который	 используется  при загрузке ЭВРИКИ
для  установки режимов по умолчанию. Данный файл создается
пользователем (см. раздел "Режимы работы ЭВРИКИ").

			    11



		10. Описание проблемы

     Для  описания проблемы вам	необходимо ознакомиться	со
встроенными  функциями ЭВРИКИ и	командами редактора. Кроме
этого вы можете	воспользоваться	многочисленными	примерами,
приведенными   в  приложении  и	 тексте	 данного  пособия,
которые	 соответствуют примерам, поставляемым с	оригиналом
ППП  ЭВРИКА.  Для  того	чтобы загрузить	файл с проблемой и
увидеть	  его	в   окне  редактора  надо  воспользоваться
возможностями меню "File".
     Составьте	 математическую	 модель	 исследуемой  вами
проблемы   и  опишите  ее,  используя  встроенные  функции
ЭВРИКИ.	 После	этого можете исследовать проблему, получая
различные  варианты  ее	решения, изменяя исходные данные и
ограничения.

Простейший пример.

;Этот пример демонстрирует непосредственное
;решение простого уравнения.

 x^3 - 27 = 0

{ Точный ответ	-   x =	3. }


     Для решения проблемы нажмите Alt-S.



		   11. Меню "File"

     Меню  "Файл" обеспечивает целый ряд режимов. Приведем
перечень альтернатив данного меню:
     - Load (загрузить);
     - New (новый);
     - Save (сохранить);
     - Write to.. (писать в..);
     - Directory (директория);
     - Change dir (менять директорию);
     - Rename (сменить имя);
     - Os shell	(резидентный режим);
     - Quit (выход).

     При  выборе альтернативы "Load" вы	можете загрузить с
диска  требуемый проблемный файл для того чтобы	работать с
ним  (редактировать,  решать,...).  В  ответ  на подсказку
программы  введите верное имя файла. Имя файла должно быть
уникальным.  Избегайте стандартных расширений имен файлов,
таких  как  .ЕХЕ,  .СОМ,  .ВАТ,	 ВАК  и	 стандартных имен,
используемых   операционной   системой.	 Если  вы  нажмете

			    12


клавишу	Enter не введя имя айла	или в имени зададите маску
(*  и/или  ?),	то  на экран будет выведен каталог файлов.
Используйте  клавиши направления для перемещения указателя
файла	(цвет  или  инверсия)  и  нажмите  клавишу  Еnter,
достигнув  нужного  файла. После этого выбранный вами файл
загружается в ОП и выводится в окне редактора.
     После  выбора  альтернативы  "New"	 в  окне редактора
удаляется  текст,  который  редактировался,  и открывается
новый  файл. Если при этом старый текст	в буфере редактора
не  был	 сохранен,  то	ЭВРИКА предлагает сохранить его	на
диске.
     При  выборе  альтернативы	"Save"	на  диск выводится
текущий	  рабочий  файл.  При  этом,  если  на	диске  уже
существует    файл    с	   таким    же	 именем,   то	он
переименовывается,  получая  расширение	 имени	.ВАК.  При
попытке	 записи	 на  диск  рабочего файла без имени ЭВРИКА
просит	дать  ему имя. Можно напечатать	имя файла и нажать
клавишу	 Еnter.	Если данная клавиша нажата без ввода имени
файла, то файл сохраняется на диске с именем NONAME.
     Альтернатива  "Write  to.."  используется	для записи
текущего  файла	 на  диск  с новым именем, например, после
редактирования.	 После	выбора	этой  альтернативы  ЭВРИКА
просит	ввести	имя  файла. Вы можете задать шаблон имени,
используя  символы  "*"	 и  "?",  чтобы	 получить  каталог
существующих файлов.
     После   выбора   альтернативы  "Directory"	 на  экран
выводится список файлов	в текущей или заданной директории.
Вы  можете  задать  маску,  используя  символы	"*" и "?",
следуя	 правилам   принятым   в  MS  DOS.  Для	 просмотра
оглавления  директории (поддиректории) используйте клавиши
направления.  Вы  можете  задать новую маску имени файлов,
нажав клавишу "F3".
     Выбрав  альтернативу "Change dir" вы сделаете текущей
требуюмую  вам	директорию.  В	ответ на подсказку введите
путь  к	 новой директории, которую хотите сделать текущей.
Используйте  при  этом	только	существующие  имена пути и
директории.
     Альтернатива  "Rename" позволяет изменить имя файла в
буфере	редактора.  При	этом файл не сохраняется и его имя
на диске не изменяется.
     Альтернатива  "Os  shell" выбирается, если	необходимо
выйти  в  ДОС,	оставив	 ЭВРИКУ	резидентной в ОП. Выполнив
требуемые   действия  в	 ДОС,  введите	команду	 ЕХIT  для
возврата в ЭВРИКУ.
     Альтернатива  "Quit"  служит  для завершения работы с
ЭВРИКОЙ	  и   возврата	 в   ДОС.  Если	 вы  не	 сохранили
модифицированный  файл,	программа перед	завершением работы
попросит  вас сделать это. Кроме этого выйти из	ЭВРИКИ без
сохранения  текущего  файла  и	независимо от того в каком
меню вы	находитесь можно нажав клавиши ALT-X.

			    13


	     12. Редактирование	проблемы

     Загрузив	проблему  с  диска  из	файла  или  выбрав
создание  новой	проблемы вам необходимо	войти в	редактор и
набрать	  (отредактировать)  проблемный	 файл.	Для  этого
требуется познакомиться	с окном	редактора и его	командами.
Если  вы  уже знакомы с	компилятором TURBO PASCAL, то этот
редактор  покажется  вам знакомым. Находясь в главном меню
выберите  альтернативу	"Редактор",  чтобы  перейти в окно
редактора.  Войти  в  редактор	из любого меню можно нажав
клавиши	 АLТ-Е.	 После	этого  вводите текст так, будто	вы
печатаете  его	на  машинке. Для завершения строки нажмите
клавишу	 Еnter,	 для  выхода  из редактора нажмите клавишу
ESC.
     Строка  состояния	вверху	окна  редактора	показывает
номер  текущей	строки	относительно  начала файла и номер
позиции	 в  строке,  содержащей	 курсор,  какой	установлен
режим-	 вставка   или	 замена,   можно  ли  обрабатывать
табуляции,  имя	 и  расширение имени редактируемого файла.
Если  вы  не  присвоили	имя файлу (пользуясь альтернативой
"Load"	в  меню	"File"), то по умолчанию файл получает имя
NONAME.	  В  табл.1  приведены	используемые  в	 редакторе
команды. Напоминаем, что назначение управляющих	клавиш для
этих  команд  может  быть  изменено при	установке ЭВРИКИ с
помощью	программы ЕINST.

						 Таблица 1
		    Команды редактора

-----------------------------------------------------------
|	   Команда	       |	   Клавиша	  |
-----------------------------------------------------------
|  1.Команды перемещения курсора			  |
|			       |			  |
| Перейти на новую строку      | Enter			  |
| Символ влево		       | Ctrl-S	или стрелка влево |
| Символ вправо		       | Ctrl-D	или стрелка вправо|
| Слово	влево		       |	 Ctrl-A		  |
| Cлово	вправо		       |	 Ctrl-F		  |
| Строка вверх		       | Сtrl-E	или стрелка вверх |
| Строка вниз		       | Ctrl-X	или стрелка вниз  |
| Двигать вверх		       |	 Ctrl-W		  |
| Двигать вниз		       |	 Ctrl-Z		  |
| Экран	вверх		       | Ctrl-R	или PgUp	  |
| Экран	вниз		       | Сtrl-C	или PgDn	  |
| В начало строки	       | Сtrl-QS или HOME	  |
| В конец строки	       | Сtrl-QD или END	  |
| В начало экрана	       | Сtrl-QE или Сtrl-Home	  |
| В конец экрана	       | Сtrl-QX или Сtrl-End	  |
| В начало файла	       | Сtrl-QR или Сtrl-PgUp	  |
| В конец файла		       | Сtrl-QC или Сtrl-PgDn	  |
| В последнюю запомненную      |	 Сtrl-QР	  |
| позицию		       |			  |
| В начало блока	       |	 Сtrl-QB	  |
___________________________________________________________

			    14

				       Продолжение табл. 1

-----------------------------------------------------------
|	   Команда	       |	   Клавиша	  |
-----------------------------------------------------------
| В конец блока		       |	 Сtrl-QК	  |
|			       |			  |
| 2. Команды вставки/удаления				  |
|			       |			  |
| Включить/выключить режим     | Ctrl-V	или Ins		  |
| вставки		       |			  |
| Вставить строку	       |	 Сtrl-N		  |
| Удалить строку	       |	 Ctrl-Y		  |
| Удалить до конца строки      |	 Ctrl-QY	  |
| Удалить символ слева от      | Ctrl-H	или BackSpace	  |
| курсора		       |			  |
| Удалить символ	       | Ctrl-G	или DEL		  |
| Удалить слово	справа от      |	 Ctrl-T		  |
| курсора		       |			  |
|			       |			  |
| 3. Прочие команды					  |
|			       |			  |
| Конец	редактирования	       | Ctrl-КD или Ctrl-KQ или  |
|			       |	 ESC		  |
| Cохранить файл	       | Ctrl-ks или F2		  |
| Новый	файл		       |	 F3		  |
| Табуляция		       | Ctrl-I	или ТАВ		  |
| Включить режим обработки     |	 Сtrl-OT	  |
| табуляций		       |			  |
| Включить/выключить режим ав- |	 Сtrl-OI	  |
| томатического	отступа	слева  |			  |
| Восстановить последнюю       |	 Сtrl-QL	  |
| удаленную строку	       |			  |
| Запомнить текущую позицию    |	 Сtrl-KN	  |
| курсора		       |			  |
| Переместиться	в запомненную  |	 Сtrl-QN	  |
| позицию курсора	       |			  |
| Поиск	текста по образцу      |	 Сtrl-QF	  |
| Поиск	текста с заменой       |	 Сtrl-QA	  |
| Повторить последний поиск    |	 Сtrl-L		  |
| Ввести управляющий символ    |	 Сtrl-Р		  |
| Отменить команду	       |	 Сtrl-U		  |
| Восстановить сообщение об    |	 Сtrl-QW	  |
| ошибке		       |			  |
| Отметить начало блока	       |	 Сtrl-KB	  |
| Отметить конец блока	       |	 Сtrl-КК	  |
| Отметить слово	       |	 Сtrl-КТ	  |
| Сделать блок невидимым       |	 Сtrl-КН	  |
| Копировать блок	       |	 Сtrl-КС	  |
| Переместить блок	       |	 Сtrl-KV	  |
| Удалить блок		       |	 Сtrl-KY	  |
| Читать блок		       |	 Сtrl-КR	  |
| Писать блок		       |	 Сtrl-КW	  |
| Установить маркер 0	       |	 Сtrl-К0	  |
| Установить маркер 1	       |	 Сtrl-К1	  |
| Установить маркер 2	       |	 Сtrl-К2	  |
___________________________________________________________

			    15


				       Продолжение табл. 1

-----------------------------------------------------------
|	   Команда	       |	   Клавиша	  |
-----------------------------------------------------------
| Установить маркер 3	       |	 Сtrl-К3	  |
| Перейти к маркеру 0	       |	 Сtrl-Q0	  |
| Перейти к маркеру 1	       |	 Сtrl-Q1	  |
| Перейти к маркеру 2	       |	 Сtrl-Q2	  |
| Перейти к маркеру 3	       |	 Сtrl-Q3	  |
|			       |			  |
-----------------------------------------------------------
     При  поиске  текста  и  поиске текста с заменой могут
задаваться следующие режимы:
     - В - искать назад;
     - G - искать везде;
     - n - (n=число) искать время n секунд;
     - N - замена с подтверждением;
     - U - игнорировать	регистр;
     - W - искать только целые слова.
     Попробуйте	 набрать  какой-либо  текст,  тренируясь в
использовании команд редактора.



	     13. Переменные и константы

     В ППП ЭВРИКА используются простые неструктурированные
переменные. Идентификатор переменной включает от одного	до
сорока	пяти  символов	латинского или русского	алфавита и
цифры  и начинается с буквы. Идентификатор может содержать
символы	 подчеркивания.	 Если  в идентификаторе	переменной
встречаются    пробелы,	   то	они   игнорируются.   Если
используются  одна  и та же большая и малая буква (А и а),
то   они   будут   считаться   идентификаторами	 различных
переменных  (если  установка casefold -	no, cm.	"Установки
ЭВРИКИ").
     Правила	написания    идентификаторов	переменных
определяет   установка	 ЭВРИКИ	  syntax  (синтаксис).	По
умолчанию     установлен    синтаксис	 0,    разрешающий
многосимвольные	    имена,     синтаксис    1	 разрешает
односимвольные имена, а	синтаксис 2 ограничивает имя одним
символом и запрещает экспоненциальный формат чисел.
     Константы в ППП ЭВРИКА могут задаваться в виде целых,
действительных	 чисел	 и   в	экспоненциальном  формате.
Например,   2,	 3.10,	 2e2,	-3.10.	Если  в	 выражении
(уравнении,    неравенстве)    заданы	 различные   формы
представления	чисел,	 а   также   при  вычислениях  они
преобразуются к	действительным.
     В	 результате   решения  проблемы	 переменные  могут
получать  комплексные  значения.  Обозначение  их  в таком
случае будет с префиксами re у действительной части и im у
мнимой части. Например,
		       re pi = 3.14
		       im pi =	.00


			    16


	 14. Выражения и встроенные функции

     В	  ЭВРИКЕ    используются   только   арифметические
выражения.    Выражения	   вводятся    с    использованием
математических	операций.  Математические  операции, такие
как  сложение  "+",  вычитание "-", умножение "*", деление
"/",   возведение  в  степень  "^",  степень  десяти  "е",
используются в выражениях как и	встроенные функции ЭВРИКИ.
В  выражениях  допустимо  использование	 круглых  скобок в
соответствии  с	 правилами  математики.	Комментарии должны
начинаться  со	знака  ";"  в  первой  позиции	строки.	 В
функциях,    уравнениях	   и   неравенствах   используются
стандартные  обозначения математики (=,	:=, >, <, >=, <=).
Если   в   одной   строке  размещены  несколько	 уравнений
(функций,...),	то  они	 разделяются знаком ":". Если одно
уравнение  (функция,...)  не  помещается  в строку, то оно
переносится   в	  следующую   строку   (без  использования
специальных  знаков  для  обозначения  переноса). Приведем
примеры	вычисления выражений.
		  2 + 3	* 4 ---- 14.000
		  -1 + 5 ^ 2 ---- 24.000
		   2e3 + 7 ----	2007.0
		 5 * abs(-2) ---- 10.000
     Как видно из примеров целое и экспоненциальный формат
в   выражениях	преобразуются  в  действительное.  Следует
различать   знаки   присвоения	 (инициализации)   ":="	 и
равенства "=".
     В	табл.2	приведен  перечень  встроенных функций ППП
ЭВРИКА.

						 Таблица 2
		 Встроенные функции

-----------------------------------------------------------
|   Наименование функции       |    Обозначение	функции	  |
-----------------------------------------------------------
| Абсолютное значение	       |       abs(x)		  |
| Арктангенс отношения y/x     |       atan2(y,x)	  |
| Косинус		       |       cos(x)		  |
| Гиперболический косинус      |       cosh(x)		  |
| Производная функции f(x) по х|       deriv(f(x),x)	  |
| Экспонента		       |       exp(x)		  |
| Факториал константы	       |       fact(n),		  |
|			       |  где n=const		  |
| Целая	часть значения	       |       floor(x)		  |
| Дробная часть	значения       |       frac(x)		  |
| Будующая сумма вклада	       | fval(rate,time,	  |
|			       |   pres_value,payment),	  |
|			       | где rate-процент,	  |
|			       | time-время (в месяцах),  |
|			       | pres_value-нач. вклад,	  |
|			       | payment- платеж	  |
| Мнимая часть числа	       |       im(x)		  |
___________________________________________________________

			    17


				       Продолжение табл. 2

-----------------------------------------------------------
|   Наименование функции       |    Обозначение	функции	  |
-----------------------------------------------------------
| Определенный интеграл	       | integ(f(x),x,lower_bound,|
|			       |       upper_bound),	  |
|			       | где f(x)- функция,	  |
|			       | х- переменная,		  |
|			       | lower_bound-верхняя	  |
|			       |	     граница,	  |
|			       | upper_bound-нижняя	  |
|			       |	     граница	  |
| Натуральный логарифм	       |       ln(x)		  |
| Логарифм по основанию	10     |       log10(x)		  |
| Отрицательный	квадратный     |       msqrt(x)		  |
| корень		       |			  |
| Нормальное совокупное	       |       ncum(x)		  |
| распределение		       |			  |
| Сумма	платежа		       | paymt(rate,time,	  |
|			       | pres_value,future_value),|
|			       | где rate-процент,	  |
|			       | time-время (в месяцах),  |
|			       | pres_value-нач. вклад,	  |
|			       | future_value-будующая	  |
|			       |	  сумма	вклада	  |
| Преобразование полярных      |       polar(x,y)	  |
| координат		       |			  |
| Полином		       |       poly(x,...),	  |
|			       | где за	переменной следует|
|			       | перечень полиномиальных  |
|			       | коэффициентов		  |
| Положительная	часть числа    |       pos(x)		  |
| Текущий платеж	       | pval(rate,time,	  |
|			       |    payment,future_value),|
|			       | где rate-процент,	  |
|			       | time-время (в месяцах),  |
|			       | payment- платеж,	  |
|			       | future_value-будующая	  |
|			       |       сумма вклада	  |
| Действительная часть числа   |       re(x)		  |
| Sign-функция		       |       sgn(x)		  |
| Синус			       |       sin(x)		  |
| Гиперболический синус	       |       sinh(x)		  |
| Kвадратный корень	       |       sqrt(x)		  |
| Сумма			       | sum(f(x),x,first,last),  |
|			       | где f(x)-функция,	  |
|			       | х-переменная,		  |
|			       | first-нач. значение,	  |
|			       | last- кон.значение	  |
| Тангенс		       |       tan(x)		  |
| Гиперболический тангенс      |       tanh(x)		  |
-----------------------------------------------------------

			    18


		15. Установки ЭВРИКИ

     Установки	 ЭВРИКИ	 позволяют  установить	(изменить)
некоторые   значения   по  умолчанию,  а  также	 управлять
решением  проблемы.  Перечень  установок ЭВРИКИ	приведен в
табл.3.

						 Таблица 3
		     Установки ЭВРИКИ

-----------------------------------------------------------
|  Обозначение	   |	Наименование и комментарий	  |
-----------------------------------------------------------
| accuracy	   | Точность решения.			  |
|		   | Малое положительное число.	Чем ближе |
|		   | к нулю, тем выше точность решения.	  |
| complex	   | При установке yes все переменные	  |
|		   | рассматриваются как комплексные.	  |
| casefold	   | При установке yes верхний регистр	  |
|		   | рассматривается как нижний.	  |
| digits	   | Значение выводимого числа.	Общее	  |
|		   | количество	значащих цифр в	числе.	  |
| initval	   | Начальное значение	переменных,	  |
|		   | которое берется по	умолчанию, если	  |
|		   | оно не задано в проблемном	файле.	  |
| finanmode	   | Режим платежа. Устанажливается в	  |
|		   | BEGIN, если платеж	начинается	  |
|		   | каждый период времени.		  |
| finansmooth	   | Установка yes для хешируемых (непре- |
|		   | рывных) финансовых	функций. При	  |
|		   | установке no платеж считается	  |
|		   | дискретным	событием в начале или	  |
|		   | конце периода времени.		  |
| listdefautl	   | Установка yes означает, что команда  |
|		   | "List"   будет брать свои аргументы  |
|		   | из	установок, а не	у пользователя,	  |
|		   | no	- в диалоге у пользователя.	  |
| list_first	   | Значение первой точки диапозона для  |
|		   | команды "List",   если установка	  |
|		   | listdefault - yes.			  |
| list_inc	   | Шаг для вычисления	нового значения	  |
|		   | функции в команде "List",	 если	  |
|		   | listdefault - yes.			  |
| list_num	   | Количество	точек для команды "List", |
|		   | если listdefault -	yes.		  |
| maxtime	   | Максимальное время	в секундах для	  |
|		   | решения проблемы.			  |
| penalti	   | Фактор отягощения важности	нера-	  |
|		   | венства ограничениями.		  |
| plot_left	   | Левая граничная точка для команды	  |
|		   | "Graph",	 если установка		  |
|		   | plotdefault - yes.			  |
| plot_right	   | Правая граничная тояка для	команды	  |
|		   | "Graph",	  если установка	  |
___________________________________________________________

			    19


				       Продолжение табл. 3

-----------------------------------------------------------
|  Обозначение	   |	Наименование и комментарий	  |
-----------------------------------------------------------
|		   | plotdefault - yes.			  |
| plotdefault	   | Установка yes означает, что команда  |
|		   | "Graph"	 берет аргументы из	  |
|		   | установок,	а no означает, что аргу-  |
|		   | менты запрашиваются в диалоге у	  |
|		   | пользователя.			  |
| radius	   | Поиск радиуса используется	в команде |
|		   | "Find other" .			  |
| rootsign	   | Знак корня. POS означает использова- |
|		   | ние положительных корней,		  |
|		   | NEG - отрицательных.		  |
| substlevel	   | Число от 0	до 6, показывающее сколько|
|		   | раз может использоваться метод под-  |
|		   | становки при решении уравнений. По	  |
|		   | умолчанию и максимальное значение-	6.|
| syntax	   | По	умолчанию установлен синтаксис 0, |
|		   | разрешающий использование многосим-  |
|		   | вольных идентификаторов переменных.  |
|		   | Синтаксис 1 ограничивает идентифика- |
|		   | тор одним символом. Синтаксис 2 ог-  |
|		   | раничивает	идентификатор переменных  |
|		   | одним символом и запрещает	экспонен- |
|		   | циальный формат чисел.		  |
-----------------------------------------------------------



     16. Ограничения	на    переменные   (функции).
			Директивы

     Ограничения  могут	 накладываться	как на переменные,
так  и на функции. Ограничения накладываются в виде знаков
математияеского	 отношения ("=", "<", ">", ">=", "<=") или
с помощью специальных директив (мах, min). Директивы могут
использоваться	для изменения значений требуемых установок
на  время решения загруженной проблемы (settings), задания
преобразования	 единиц	  измерения  (units),  подключения
проблемы   к   загруженной   из	 другого  дискового  файла
(include) и др.	Формат записи директивы:
		 $ директива (переменная)
Директивы могут	быть:
     - min (минимизировать);
     - max (максимизировать);
     - settings	  (начало   списка   установок,	 позволяет
изменить  следующие  за	 ней  установки	 на  время решения
загруженной  проблемы,	последней  должна  быть	 директива
end);
     - end   (конец  списка  директив  или  преобразований
единиц измерения);

			    20


     - digits (общее количество	значащих цифр в	числе);
     - include (включить проблему из другого файла);
     - units (задать преобразование единиц измерения).
     В	 качестве  параметра  директивы	 include  задается
спецификация подключаемого проблемного файла. Спецификация
файла  задается	 в  кавычках  по правилам, принятым в ДОС.
Например,
		include	"c:\eureca\prob1".
     В	 качестве  директивы  может  использоваться  любая
отдельно  взятая  установка.  При  этом	значение установки
будет	брться	 из  директивы	только	на  время  решения
загруженной  проблемы.	Например,  $ finansmooht (Y). Если
задана директива вида
			$ max (y),
то переменная в	круглых	скобках	будет максимизироваться. В
контрольных примерах показано использование всех директив.



		17. Решение проблемы

     Для  того,	 чтобы	решить	проблему, подготовленную в
окне редактора,	необходимо выбрать альтернативу	"Solution"
в  главном  меню  или  нажать  клавиши "ALT-S",	находясь в
любом  меню  (окне).  Пока ЭВРИКА ищет решение проблемы, в
промежуточном окне на экране показывается время, прошедшее
с  начала  решения,  текущее приближенное значение ошибки,
для  каких переменных (идентификаторы переменных или слова
"все   переменные")  ищется  решение.  Максимальное  время
поиска	  решения   и	точность   решения   (максимальная
погрешность)	ограничиваются	 установками   maxtime	 и
accuracy.  Вы  можете  прервать	 процесс  решения проблемы
нажав клавишу "Ctrl-Break".
     После  того  как ЭВРИКА находит решение (решения) для
переменной  (всех  переменных)	в проблемном файле, в окне
решения	 выводится  решение проблемы и даются значения для
всех   переменных.  Если  решение  удовлетворяет  не  всем
ограничениям,  то  ЭВРИКА  дает	 в  окне  решения "уровень
доверия",   т.е.  максимальную  ошибку.  Если  в  процессе
решения	  ЭВРИКА  находит  ошибку  в  синтаксисе  описания
проблемы,  то  в  окне	ошибки	или  верхней  строке  окна
редактора  появляется  сообщение  об  ошибке  и	 вы должны
отредактировать	проблемный файл, исправить ошибку и решить
проблему  заново.  Перечень  кодов  ошибок  и сообщений	об
ошибках	приведен в приложении 1	настоящего руководства.
     Если  ЭВРИКА предположит, что в описании проблемы или
при  решении  была  вероятность	ошибки,	то в окне решения,
после	 вывода	   решения,   печатаются   соответствующие
предупреждения.

     Еще    несколькo	 возможностей	решения	  проблемы
реализованы  в	меню  "Commands"  одноименной альтернативы
главного   меню.  Альтернатива	"Find  other"  приказывает
ЭВРИКЕ	искать еще одно	решение	после успешного	завершения
решения	 проблемы.  Альтернатива  "Iterate"-  это  команда

			    21


ЭВРИКЕ	продолжить поиск решения, начиная с точки останова
предыдущего поиска. Альтернатива "Verify" используется для
проверки  результатов  решения.	При верификации	подходящие
решения	 подключаются  во  все	выражения в решаемом файле
уравнений  и  результат	 сравнивается  с базовым решением.
Результат   каждого  такого  сравнения	выводится  в  окне
верификации. Выводятся правые и	левые части уравнений и	их
различие.



	   18. Несколько простых примеров

     Приведем  ряд  простейших	примеров,  демонстрирующих
основные  возможности ППП ЭВРИКА. Наберите данные примера,
решите их.

Пример.
;Этот пример демонстрирует итеративное
;решение простого уравнения.

 x^2 + x/(x + 1) - 6 = 0

{ Точное решение - x = 2.30278
  или -1.39713 или -2. }

Пример.
; В этом примере решается система
; линейных уравнений.

   2*X + Y + Z = 7
   X - Y + Z = 2
   X + Y - Z = 0

{ Точное решение -  X =	1, Y = 2, Z = 3.}

Пример.
; В этом примере решается система
; нелинейных уравнений.

  y = 48 - x^2
  x^5 =	y^2

{ Точное решение -  x =	4, y = 32.}

Пример.
; В этом примере решается система
; нелинейных уравнений с
; инициализацией итераций.

{ Нелинейные уравнения }
 x^2 + a^2 = 45^2
 x^2 + b^2 = 35^2
 y/10 =	x/b
 (x-y)/10 = x/a

			    22



{ Инициализация	переменных }
 x := 10
 y := 10
 a := 20
 b := 20

Пример.
; Это пример минимизации
; простой функции.

$min (F)

 F = x^2 - 7*x + 10

{ Точное решение -  x =	3.5, F = -2.25.	}

Пример.
; Это пример минимизации
; простой функции с
; инициализацией.

$min (F)

 F = A + B + (X	- Z)^2 + 10 * (Y - X^2)^2
 Z = 2.34
 A = 4
 B = 3

  X := -1.2
  Y := 1

{ Точное решение -  x =	2.34, F	= 7. }

Пример.
; В этом примере находятся
; все корни полинома.

 p(x) := poly(x,1,0,0,0,0,1)

{ p(x)	это  x^5 + 1.}

Пример.
; В этом примере уравнения решаются
; вместе с преобразованием единиц измерения.

$ units
 cm -> in : x /	2.54
 F. -> ї C. : (x - 32) * 5 / 9
$ end

 a^2 + b = 69
 a + b/5 = 15

 a := 2	[in]

			    23



 b := 5	[їF.]

Пример.
; В этом примере используются
; специальные графические символы
; (аналогично и	кирилица)

 ╢^3 = 2 * °2
 ╢ Ё 0
 ╟¤ = 9
 ╕¤ · (1 + ╕) =	3.2
 ╜ = 3.14159265

Пример.
; Пример нахождения минимального расстояния
; от некоторой схемы до	элипсоида

$ settings
 accuracy = .00000000001
 digits	= 9
$ end

$ min (F)
 X^2 + 2 * Y^2 + 3 * Z^2 = 20		    ; элипсоид
 3 * U + 4 * V + 3 * W = 54		    ; схема
 F = (X	- U)^2 + (Y - V)^2 + (Z	- W)^2	    ; квадрат расстояния

; точное решение :    X	= 3 , Y	= 2 , Z	= 1
;		      U	= 6 , V	= 6 , W	= 4
;		      F	= 34

{ начальные значения }
 X := 0
 Y := 0
 Z := 0
 U := 8
 V := 8
 W := 8

Пример.
; Этот пример показывает как долго надо
; расплачиваться за заклад в 150000 $,
; если нижний платеж - 20000 $,а ставка	- 13%

$ finansmooth =	yes
	DNPAY =	20000
	LOAN = 150000
	EQUITY = LOAN +	FVAL(MRATE,MONTHS,LOAN-DNPAY,-2000)
	MRATE =	YRATE /	12
	YEARS =	MONTHS / 12
	YRATE =	0.13
	EQUITY = 100000
	YEARS := 10
	MONTHS := 90


			    24



		19. Отчет о проблеме

     Отчеты  и	Log-файлы  (протоколы) дают удобный способ
сохранить  результаты  вашей работы. Выберите альтернативу
"Report"  в  главном  меню.  На	 экран выводятся следующие
альтернативы меню "Report":
     - Go (выполнить);
     - Output Screen (вывод на экран);
     - Formatted (форматирование);
     - Capture (захват выключен);
     - Log-file	name (имя Log-файла).
     Альтернатива    "Go"   (выполнить)	  создает   отчет,
содержащий  текущую  проблему  и  ее решение, и, возможно,
если  соответствующие  команды	выполнялись,  верификацию,
диаграмму,  список  значений  функции.	Отчет выводится	на
экран,	принтер	 или  диск  в соответствии с переключением
вывода,	 которое  задается альтернативой "Output". Текущее
направление вывода отчета печатается рядом с альтернативой
"Output" (экран, дисковый файл,	принтер).
     Отчет  может  быть	форматирован или нет (альтернатива
"Formatted").	В   форматированном   отчете   при  печати
постоянно  через  каждые 11" бумаги вставляется оформление
листа.	Оформление  листа включает номер листа,	имя файла,
дату и время решения проблемы.
     При  включенном (ON) захвате (альтернатива	"Capture")
результаты   вашей  работы  автоматически  сохраняются	на
диске.	 Проблемы   и	решения	  сохраняются	в   файле,
обозначенном как "Log-file name" в данном меню.	Имя и путь
к  этому файлу можно задать, выбрав альтернативу "Log-file
name".



     20. Вывод графика и списка	значений функции

     ЭВРИКА   имеет  графические  функции  в  текстовом	 и
графическом   режимах.	Вы  можете  также  вывести  список
значений функции в заданном диапозоне точек. Чтобы вывести
график	или  список значений функции выберите альтернативу
"Graph"	 главного  меню.  Меню	"Graph"	 включает  в  себя
следующие альтернативы:
     - Plot (вывод графика);
     - Output Screen (вывод на экран);
     - List (список);
     - Funktion	(функция).
     Для  вывода  графика или списка точек функции сначала
введите	 функцию  в окно редактора и решите ее или введите
функцию,   выбрав   альтернативу   "Funktion".	 При  этом
программа  просит  ввести  и определить	функцию. Если ваша
проблема   содержит   несколько	 функций,  то  при  выборе
альтернативы   "Graph"	 вам  предоставляется  возможность
указать,  какую	функцию	вы хотите вывести. График строится

			    25


в  окне	 диаграммы  для	заданной функции. Вы можете задать
левую  и  правую  граничные  точки графика, если установка
ЭВРИКИ	plotdefault  - no. Если	данная установка - yes,	то
границы	диапозона диаграммы берутся из установок plot_left
(левая)	и plot_right (правая).
     График   выводится	 на  экран  или	 на  принтер.  Это
определяется   альтернативой  "Output",	 рядом	с  которой
обозначено текущее направление вывода. Диаграммы выводятся
на  экран  в  текстовом	 режиме.  Если имеется графический
монитор,  то  для  вывода  диаграммы  в	графическом режиме
нажмите	 клавишу  "F5".	 Для  печати диаграммы на принтере
необходим совместимый с	Еpson матричный	принтер.
     При  выборе  альтернативы	"List"	вы получите список
значений  заданной функции, как	и при выводе диаграммы.	Вы
можете	задать	первую точку (начальную), шаг уменьшения и
количество  значений  для  списка,  если  установка ЭВРИКИ
listdefault-  no. Если данная установка- yes, то указанные
значения  берутся  из установок	list_first (первая точка),
list_inc (шаг уменьшения), list_num (количество	точек).
     Например, при вводе функции вида
		      f	= x * sin(x)
можно получить диаграмму или список значений этой функции.
Если определена	функция	вида
		    f(x) := х *	sin(х)
в  окне	редактора и она	решена,	то для выбора этой функции
надо указать в меню ее имя.



	      21. Режимы работы	ЭВРИКИ

     Режимы  можно  устанавливать  (менять)  после  выбора
альтернативы  "Options"	 в  главном меню ЭВРИКИ. Некоторые
режимы	 относятся  к  текущему	 файлу	уравнений,  другие
создают	  или  загружают  установочные	параметры,  третьи
модифицируют внешний вид окон и	меню ЭВРИКИ.
     Меню    "Options"	  включает    в	  себя	 следующие
альтернативы:
     - Variables (переменные);
     - Settings	(установки);
     - Colors (цвета);
     - Directory (директории);
     - Load setup (загрузить установки);
     - Write setup (хранить установки).
     При   выборе   альтернативы   "Variables"	вы  можете
изменить  значения переменных текущего файла уравнений без
выхода в окно редактора.
     После  выбора  альтернативы  "Settings"  вы получаете
возможность  изменить  установки  ППП  ЭВРИКА  (см. раздел
"Установки ЭВРИКИ").
     Выбрав  альтернативу  "Colors"  вы	получаете доступ к
ряду  подменю  цветов,	с  помощью которых можете изменить
цвета  сообщений,  текста,  рамок на экране и в	любом окне
ЭВРИКИ.	Используя клавиши направления выберите меню, окна,
рамки  или  текст, цвет	которых	хотите изменить, и нажмите

			    26


клавишу	  Еnter.   На	экран  выводится  палитра  цветов.
Используя  клавиши  направления	выберите нужные	вам цвета.
Вы  можете  снова  восстановить	предыдущие цвета, выбрав в
подменю	цветов альтернативу "Restore default".
     После  выхода  из	программы  в ДОС текущие установки
цветов	 теряются,   если   не	 сохранить  их,	 используя
альтернативу  "Write  setup"  меню  "Options". Сохраненные
установки  могут  быть	загружены  с  помощью альтернативы
"Load setup".
     Проблемные	и программные файлы ЭВРИКИ можно хранить в
любой  директории, задав ее имя	и путь к ней. После выбора
альтернативы   "Directory"  ЭВРИКА  позволяет  задать  имя
директории и пути к ней	для своих программных и	проблемных
файлов (см. выше). Если	вы зададите новое имя директории и
путь  к	 ней,  то  команды  меню  "File" такие как "Load",
"Save",	 "Write  to..",	 "Directory"  будут  относиться	 к
данной	директории,  если в спецификации файла не задается
явно другая директория.



		 22. Работа с окнами

     Для  работы  с окнами необходимо выбрать альтернативу
"Window"  главного  меню  ЭВРИКИ.  Меню	"Window" позволяет
изменить  размер  или  некоторые  атрибуты окон, используя
следующие альтернативы:
     - Open (открыть);
     - Close (закрыть);
     - Next (следующее);
     - Zoom (увеличить);
     - Tile (управление);
     - Stack (стек);
     - Goto (переход).
     Окна  могут  быть	открытыми,  если  они выводятся	на
экран,	или  закрытыми,	 если  они  на экран не	выводятся.
Текущее	или активное окно это окно, с которым вы работаете
в  настоящее  время  или  работали  до	входа  в меню. Все
команды	 вводимые  из  меню  относятся к текущему окну.	На
экране	текущее	 окно  выделяется двойной рамкой. Атрибуты
окон   являются	 активными  даже  у  закрытых  окон.  Окно
открывается   автоматически   при  выборе  режима  работы,
направляющего  вывод  в	 данное	 окно.	Открыть	окно можно
также  с  помощью  альтернативы	 "Open".  После	этого окно
выводится на экран.
     Если  вы  хотите  убрать  с экрана	некоторое окно,	то
можете	 выбрать   альтернативу	  "Close".   После  выбора
альтернативы "Open" или	"Close"	вам предлагается выбрать в
меню  окно для выполнения этого	действия. Вы можете писать
в окно и после его закрытия.
     Альтернативу   "Next"  используйте	 для  того,  чтобы
сделать	 текущим нужное	окно среди открытых. При повторном
выборе	"Next"	текущие	 окна  меняются	в цикле. Вы можете
выполнить  такое  же  действие,	 находясь в любом меню или
окне при нажатии клавиши "F6".

			    27


     Альтернатива  "Zoom" увеличивает активное окно экрана
до   размеров	всего	экрана.	  Повторный   выбор   этой
альтернативы   восстанавливает	 первоначальные	 установки
экрана.	 Аналогичное  действие	выполняется из любого меню
или окна при нажатии клавиши "F5".
     Выбор  альтернативы  "Tile"  делает все активные окна
занимающими  равные  части  экрана.  Все окна выводятся	на
экран.	Переключение  активного	 окна выполняется клавишей
"F6".
     После  выбора  альтернативы "Stack" все открытые окна
помещаются  в  стек. Нажатие клавиши "F6" будет	означать в
этом   случае	"тасовку"   (перемещение)  окон	 в  стеке.
Последнее окно стека будет становиться первым и	активным.
     После   того   как	  некоторое   окно  открыто  выбор
альтернативы  "Goto"  для данного окна будет означать, что
данное окно станет текущим и произойдет	вход в данное окно
без возврата в меню.



		   23. Калькулятор

     ППП  ЭВРИКА  для  удобства	работы содержит	встроенный
калькулятор.  Калькулятор  выводится  на  экран	при выборе
альтернативы  "Calculator" меню	"Commands" или при нажатии
клавиш	ALT-С  при  нахождении	в  любом  окне	или  меню.
Калькулятор  позволяет вычислять арифметические	выражения.
Используйте  операции "+" (сложение), "-" (вычитание), "*"
(умножение),  "/"  (деление) и "^" (возведение в степень).
Калькулятор   может  использовать  встроенные  функции	не
требующие   не	 определенных	переменных   и	 вычислять
выражения,   используя	 переменные   из  текущего  файла,
загруженного на	редактирование.



      24. Управление функциональными клавишами

     При   работе   с	ЭВРИКОЙ	 для  удобства	вы  можете
использовать  управление  с  помощью  ряда  функциональных
клавиш.	 В нижней строке экрана	постоянно горят	подсказки,
какие  действия	 вы можете выполнить с помощью клавиш. Эти
подсказки  меняются,  в	зависимости от того, какие функции
пакета	вы  в данный момент используете. ЭВРИКА	использует
также  ряд  команд,  вводимых  нажатием	комбинации из двух
клавиш.	 Следует  запомнить,  что  такие  команды вводятся
только на латинском регистре (в	отличие	от команд в меню).
Эти команды включают нажатие одной из клавиш "Ctrl", "Alt"
или   "Shift"  и  другой  клавиши.  Посмотреть,	 какие	из
двухклавишных  команд  определены  в  данный момент, можно
нажав  клавишу	"Ctrl",	 "Alt" или "Shift" и удерживая ее.
После  этого  в	нижней строке экрана появится подсказка, в
комбинации  с  какими клавишами	нажатая	клавиша	определена
или   будет  выведено  сообщение,  что	данная	клавиша	 в
настоящий момент не определена.	Напомним, что соответствие

			    28


управляющих  клавиш  для команд	редактора может	изменяться
вами с помощью программы EINST.
     В	заключение  приводится	перечень  основных команд,
вводимых с клавиатуры:
     - "F1" - помощь ЭВРИКИ пользователю;
     - "F2" - сохранить	файл на	диске;
     - "F3" - создать новый файл в буфере редактора;
     - "F5" - увеличить	активное окно на весь экран;
     - "F6" - сменить активное окно;
     - "F7" - перейти в	активное окно из меню;
     - "Scroll  Lock" -	включить/выключить режим изменения
размеров/перемещения окон;
     - "ALT-Е" - войти в редактор;
     - "ALT-S" - решить	текущую	проблему;
     - "ALT-С" - войти в калькулятор;
     - "ALT-Х"	-  выйти  из  ЭвРИКИ  в	ДОС без	сохранения
текущего файла.

			    29


					   ПРИЛОЖЕНИЕ 1


		    Сообщения о	ошибках


     ППП  ЭВРИКА  обладает  развитой системой диагностики.
Сообщения об ошибках делятся на	две большие группы. Первая
группа	ошибок	это  ошиьки  допущенные	 пользователем при
описании проблемы. Эти ошибки имеют номера от 1	до 57. Они
выводятся  в  инверсном	 или  цветном изображении в первой
строке окна редактора при решении проблемы. По коду ошибки
вы  можете  найти  комментарий	к  этой	ошибке в настоящем
приложении.  Ошибка не имеет комментария, если ее характер
ясен  из  текста  сообщения.  После  этого  вам	необходимо
нажать	клавишу	ESC. Сообщение об ошибке погаснет и курсор
установится   в	  строку,  где	допущена  (предполагается)
ошибка.	 Вам  необходимо  разобраться,	в  чем заключается
ошибка,	 исправить  ее и снова запустить решение проблемы.
Назовем	такие ошибки синтаксическими.
     Вторая  группа ошибок- это	так называемые критические
или   фатальные	 ошибки.  Эти  ошибки  связаны	со  сбоями
аппаратуры, неверной работой с файлами и дисками и другими
серьезными    причинами,    делающими	решение	  проблемы
невозможным,  хотя  она	 может не содержать синтаксических
ошибок.	 Критические  ошибки  выводятся	в окне ошибки. Вам
необходимо  ознакомиться с сообщением об ошибке, найти его
в  настоящем приложении, установить причину выдачи ошибки.
В  данном  приложении  дается  краткий	комментарий,  если
характер  ошибки  не  ясен  из текста сообщения	об ошибке.
После  нажатия клавиши ESC окно	ошибки на экране исчезнет.
Вам  необходимо	 установить  причину  критической ошибки и
устранить  ее. Если вы не можете установить причину вывода
сообщения об ошибке, обратитесь	к системному программисту.

     Далее приводится перечень синтаксических ошибок:

     1.identifier too long- Длинный идентификатор.

     Идентификатор   переменной	  содержит  слишком  много
символов.  Используйте	не  более  45  символов. См. также
установку syntax.

     2.too many	constants- Много констант.

     Описание  проблемы	 содержит  слишком много констант.
Используйте не более 25	констант.

     3.too many	variables- Много переменных.

     Описание  проблемы	содержит слишком много переменных.
Используйте не более 25	переменных.

     4.too many	functions- Много функций.


			    30


     Описание  проблемы	 содержит  слишком  много функций.
Количество  функций  ограничено	 числом	используемых в них
переменных и констант.

     5.too many	formulas - Много формул.

     Описание  проблемы	 содержит  слишком  много  формул.
Количество  формул  ограничено	числом	используемых в них
переменных и констант.

     6.unexpected end of file- Конец файла.

     Конец  файла  с  уравнениями  достигнут  ранее  конца
текста.

     7.unrecognized character- Неизвестный символ.

     В	идентификаторе	используется  запрещенный  символ.
Разрешены символы латиницы и кирилицы, псевдографика, знак
подчеркивания.

     8.invalid	 function   argument-	Неверен	  аргумент
функции.

     9.variable	expected- Нужна	переменная.

     В	  данной    конструкции	  требуется   использовать
идентификатор переменной.

     10.numeral	or operator expected- Нужна цифра или знак
операции.

     11.comma expected-	Нужна точка.

     Tребуется знак десятичной точки.

     12.identifier expected - Нужен идентификатор.

     Требуется идентификатор переменной	(функции).

     13.assignment  must  be  to  a variable or	function -
Присваиваться должна переменная	или функция.

     14.constant expected- Нужна константа.

     15.invalid	 function  definition -	Функция	определена
неверно.

     16.circular    function	definition-    Определение
циклической функции.

     Определяемая  функция  в  качестве	аргумента содержит
сама себя.

     17.incorrect  number  of function arguments - Неверно
количество аргументов функции.

			    31



     18.function is undefined -	Функция	не определена.

     19.unmatched   parentheses	  -  Неверен  родительский
тезис.

     Функция основана на неверном утверждении.

     20.file not found - Файл не найден.

     Файл с указанной спецификацией отсутствует.

     21.feature	not yet	implemented - Еще нет разработки.

     22.file too large-	Большой	файл.

     Файл не помещается	в ОП.

     23.memory	  heap	  overflow   -	 Динамическая	ОП
переполнена.

     24.string space overflow -	Строка переполнена.

     Перейдите на другую строку.

     25.unable to create file- Нельзя создать файл.

     26.illegal	  combination	of   options   -  Неверное
сочетание или режим.

     27.equations   are	  inconsistent-	  Противоречие	 в
уравнениях.

     28.dynamic	 memory	 depleted  -  Динамическая  память
исчерпана.

     29.command	not understood - Неизвестная команда.

     30.cannot	have  complex derivatives or integrals-	Не
имеет комплексной производной или интеграла.

     31.use  of	 uninitialized	variable  -  Переменная	не
инициализирована.

     32.quote mark expected- Требуются (не нужны) кавычки.

     Добавьте  или  удалите  кавычки.  В кавычках задается
спецификация файла.

     33.unexpected   $END   directive-	Директива  END	не
требуется.

     Не	используйте дитективу END.


			    32


     34.too   many   active   variables-   Много  активных
переменных.

     35.syntax	error  for unit	conversion- Синтаксическая
ошибка в формате единицы измерения.

     36.too  many  unit	conversions- Много форматов единиц
измерений.

     37.invalid	number - Неверен номер.

     38.too  few  arguments  to	poly - Мало аргументов для
полинома.

     39.unrecognized  setting  value- Не опознаны значения
чисел.

     40.unrecognized setting - Не опознаны значения.

     41.relational   operator	expected-  Нужна  операция
отношения.

     Требуется	знак  математического отношения	("<", ">",
"=", ">=", "<=").

     42.cannot	complexify  floor  or  frac-  Floor и frac
несовместимы.

     См. раздел	"Выражения и встроенные функции".

     43.must  differentiate  with  respect  to a variable-
Переменные должны различаться.

     44.second	 argument   must  be  a	 variable-  Второй
аргумент не переменная.

     Аргументы данной функции должны быть переменными.

     45.variable  has not been initialized - Переменные	не
были инициализированы.

     Требуется присвоить переменным начальные значения.

     46.file already exists - Файл уже существует.

     Файл с такой спецификацией	уже существует на диске.

     47.function   is	multiply   defined-   Многократное
определение функции.

     Один  и  тот  же  идентификатор  функции определяется
несколько раз.

     48.printer	not ready- Принтер не готов.


			    33


     Заправьте	 бумагу	  в  принтер  и	 приведите  его	 в
состояние ON-LINE.

     49.bracket	expected - Нужны скобки.

     В	данном	выражении  требуется  использовать круглые
скобки.

     50.bad function call- Неверен вызов функции.

     51.sum is too large- Большая сумма.

     52.sum is invalid-	Сумма неверна.

     53.polynomial is invalid- Полином неверен.

     54.derivative   of	 unknown  function  -  Производная
неизвестной функции.

     Функция,  заданная	 как аргумент DERIV не определена.
Определите эту функцию или задайте другую.

     55.argument  must be a nonnegative	constant- Аргумент
должен быть неотрицательной константой.

     Значение  аргумента  функции  должно  быть	больше или
равно нулю.

     56.division by zero- Деление на ноль.

     В	выражении  выполнено деление на	ноль. Результат	не
определен.

     57.internal error-	Внутренняя ошибка.

     Данную ошибку ЭВРИКА не может прокомментировать.

     Большинство критических ошибок требуют консультации у
системного   программиста.   Далее   приводится	  перечень
критических ошибок упорядоченный по алфавиту:

     - Arithmetic error	- арифметическая ошибка;

     - Bad  memory  image of FAT detected - найдена плохая
копия FAT;

     - Cannot	find   COMMAND.COM   -	 не   найден  файл
command.com;

     - Can't   find  file  <filename>  -  не  найден  файл
<filename>;

     - Could not write report -	нельзя записать	отчет;

     - Critical	 disk  error  on  drive	<d> - неисправимая

			    34



ошибка на диске	в устройстве <d>;

     - Data integrity error on drive <d> - ошибка в данных
на устройстве <d>;

     - Disk full - Диск	полон;

     - Disk  is	 not  ready in drive <d> - диск	не готов в
устройстве <d>;

     - Disk  is	 write-protected  in  drive  <d>  - защита
записи диска в устройстве <d>;

     - Error  reading  file <filename> - Ошибка	при чтении
файла <filename>;

     - Error:  root or log of negative number -	корень или
логарифм отрицательного	числа;

     - File already exists - файл уже существует;

     - File close error	- ошибка при закрытии файла;

     - File creatiob error - ошибка при	создании файла;

     - <filename>  is  a corrupt configuration file - файл
конфигурации разрушен;

     - <filename>  is an invalid configuration file - файл
конфигурации неверен;

     - File not	found -	файл не	найден;

     - File write error	- ошибка при записи файла;

     - Illegal	  drive	  letter   -   запрещенный   адрес
устройства;

     - Incorrect  version  of  help file - неверная версия
файла помощи;

     - Insufficient memory - память переполнена;

     - Internal	 Error - Please	report to Borland - ошибка
ППП, просьба сообщить в	фирму Borland;

     - Invalid data - неверны данные;

     - Invalid directory - неверная директория;

     - Invalid	drive  specified  -  неверна  спецификация
устройства;

     - Invalid function	number - неверен номер функции;


			    35


     - Invalid	memory block address - неверен адрес блока
памяти;

     - Hardware	failure	on drive <d> - неисправен дисковод
<d>;

     - Line  too  long	- CR inserted -	Строка поделена	на
две путем встраивания символа "возврат каретки"	(СR);

     - Memory  control	blocks	destroyed  - разрушен блок
управления памятью;

     - No file name - не задано	имя файла;

     - No files	found -	файлы не найдены;

     - No modifiable variables - не найдено модифицируемых
переменных;

     - Not enough memory - память исчерпана;

     - Path not	found -	путь не	найден;

     - Permission denied - доступ закрыт;

     - Printer out of paper - кончилась	бумага в принтере;

     - Problem not loaded - проблема не	загружена;

     - Search string not found - Строка	не найдена;

     - Sector  not found on drive <d> -	сектор не найден в
устройстве <d>;

     - Seek  error  on	drive  <d>  -  сектор не найден	на
устройстве <d>;

     - Some  lines  too	 long  -  имеются  слишком длинные
строки;

     - This window is empty - это окно пустое;

     - Too  many  open	files  -  много	 файлов,  измените
параметр FILES в Config.sys;

     - Too  many  files	 - много файлов, измените параметр
FILES в	Config.sys;

     - Unable  to  create <filename> - Нельзя создать файл
<filename>;

     - Unexpected end of file -	неожиданно достигнут конец
файла;

     - Unknown	media  type in drive <d> - неизвестный тип
носителя в устройстве <d>;

			    36


     - Unknown	unit on	drive <d> - неизвестное	устройство
<d>;

     - Warning:	 floating  point  overflow  - переполнение
разрядов матамамики с плавающей	точкой;

     - Warning:	 time  limit  exceeded	-  превышен предел
времени	решения;

     - Warning:	   use	 of   uninitialized   variable	 -
используйте инициализируемые переменные;

     Здесь    использованы    обозначения:    <d>-   адрес
устройства; <n>- номер строки в	проблемном файле.
     Если   от	 вас   требуется   подтвердить	 повторное
выполнение или отказ от	некоторой операции, то сообщение в
окне  ошибки  дополняется вопросом "Retry? (Y/N)". Если	вы
считаете, что устранили	причину	выдачи этого сообщения,	то
нажмите	 клавишу  "Y"  для  повтора  операции, или нажмите
клавишу	"N" для	отказа от данной операции.

			    37


					   ПРИЛОЖЕНИЕ 2


	       Примеры использования ЭВРИКИ


Пример 1.
; В этом примере показывается как использовать встроенную
; функцию FACT	(FACT(x) = x факториал).  Пример следующий:
; в бридже один	игрок имеет 7 козырных карт. Мы	должны
; определить вероятность того, что оставшиеся 6	козырных
; карт распределились поровну (3 и 3) между двумя другими
; игроками. В этом примере мы вычисляем	и приближенную
; и точную вероятность.

A(x) :=	FACT(x)
C6 = A(6)
C3 = A(3)
C10 = A(10)
C20 = A(20)
C26 = A(26)
C13 = A(13)

; Комбинатурные	коэффициенты для всех имеющихся	карт
; и карт оставшихся на руках:

  Cof6and3 = A(6) / (A(3) * A(6-3))
  Cof20and10 = A(20) / (A(10) *	A(20-10))
  Cof26and13 = A(26) / (A(13) *	A(26-13))

; Приближенная вероятность расклада 3 на 3:
  ProbApprox = Cof6and3	/ 2^6

; Точная вероятность расклада 3	на 3:
  ProbExact = Cof6and3 * Cof20and10 / Cof26and13

; Правильный ответ:
;	ProbApprox = .3124
;	ProbExact = .355279503

Пример 2.
; Простое финансовое уравнение для расчета
; заема	на автомобиль

$ finansmooth =	yes

IntM = .01125
Prin = 8000.00
ntot = 48
n = (1+	IntM)^ntot

PayM = Prin * IntM * ((1+IntM)^ntot) / ((1+IntM)^ntot -	1)
FofP(n)	:= (Prin * (1*IntM)^n)
FofA(n)	:= (PayM * ((1+IntM)^n - 1) / IntM)
PayOff(n) := FofP(n) - FofA(n)

			    38


Пример 3.
;Это пример балансировки химического уравнения и
;нахождения количества реактанта, FeS, необходимого для
;получения 100.00 грамм	Fe203.

;Несбалансировонное химическое уравнение:
; FeS +	02 --> Fe203 + SO2

;Алгебраическое	уравнение для балансировки уравнения:
; a*FeS	+b+02 --> c*Fe203 + d*SO2

a = 2*c
d = a
b*2 = 3*c + 2*d

c = 2.000

;вес моля (г/моль)

mFe = 55.847
mS = 28.086
mO = 15.9994

mFeS = mFe + mS
mFe203 = mFe*2 + mO*3
mO2 = mO*2
mSO2 = mS + mO*2

;Количество продукта, требующееся на 100 г Fe2O3

hFe203 = 100.00
;Отношение моля	FeS к молю Fe203 - a:c

c*(hFeS/mFeS) =	a*(hFe203/mFe203)

;Правильный ответ - a =	d = 4, b = 7, c	= 2

Пример 4.
; Первый пример	на расчеты химического равновесия.
; В этом примере демонстрируется решение полинома
; второго порядка при расчете равновесия концентраций
; в обратимой химической реакции.

; Реакция   -	    CO + H2O <===> CO2 + H2

; При 800 градусах C, коэффициент равновесия (Keq) для
; этой реакции равен 1.2.


cCO2 = x
cH2 = x
cCO = 0.2 - x
cH2O = 0.2 - x


			    39



; Keq =	(cCO2 *	cH2) / (cCO * cH2O)

1.2 = x^2 / (0.2 - x)^2

;Начальное значение для	x

x:= 0.19

; Точный ответ : cCO2 =	cH2 = x	= .0954451
; cCO =	cH2O = 0.2 - x = .104555

Пример 5.
; Второй пример	расчета	химического равновесия.
; Это пример решения полинома четвертой	степени
; для нахождения равновесия концентраций N2, H2
; и NH3	в обратимой химической реакции
;	N2 + 3H2 <==> 2NH3
; при 25 градусах C, где log(по	основанию 10) от K(f)
; (константа равновесия	для быстрой реакции) равен
; 2.914.

K = 10^(2.914)

cN2 = 0.1 - x
cH2 = 0.3 - 3*x
cNH3 = 2*x

; Уравнение для	равновесия концентраций:
; K = (cNH3)^2 / (cN2 *	(cH2)^3)

4*(x^2)	= K * (0.1 - x)	* (0.3 - 3*x)^3

; Ограничение при нахождении корней

0 < x <	0.1

Пример 6.
;Третий	пример расчетов	химического равновесия.

; Этот пример показывает как управлять плохо-масштабируемой
; проблемой. Оригинальное уравнение было
;	Keq = 3.6 * 10^13
;	Y = (0.1 - (2*X))
;	X^3 / Y^2 = Keq
; Чтобы	уменьшить величину порядка встраиваем
; W (= Keq^(1/3) and B (= Y^(2/3))

W = 36^(1/3) * 10^4
Keq = W^3

B*W = X

B = Y^2/3
Y = (0.1 - (2*X))


			    40



X > 0
X < 0.05
W > 0
X := 0.001
B > 0

; Решение -   X	= 0.048945604, Y = 0.0021087919
; B = 1.4823344e-06, W = 33019.272, Keq	= 3.6 *	10^13

Пример 7.

; Этот пример показывает как быстро
; ЭВРИКА решает	классические проблемы.

L(x) :=	ln(x)
L(A) = 1.00000
; график L(x) для 0.1 <	x < 5

S(x) :=	sin(x/2.0)
S(B) = 1.00000

T(x) :=	tan(x/4.0)
T(C) = 1.00000

; После	решения	файла уравнений	выведите
; график функции F(x) для -10 <	x < 10

F(x) :=	sin(x)/x
F(j1) =	0.50000	: j1 < 0
F(j2) =	0.50000	: j2 > 0

Пример 8.

; В этом примере показывается как ЭВРИКА
; решает задачи	с комплексными переменными.

$ complex = yes

x^2 = -1
y^2 + 1	= 0

exp(x*pi) = theta
pi = 3.1415926

Пример 9.
; В этом примере показано, как решается	определенная
; пользователем	трансцендентная	функция	времени.
; Проблема - вычислить переменную MassUnknown, массу
; 100 кг урана 238 через 1 миллион лет.

Mass(Years) := InitialMass * 2^(-Years/HalfLife)
InitialMass = 100
HalfLife = 10* 1e6
MassUnknown = Mass(1e6)


			    41


Пример 10.
 ; В этой проблеме показано как	можно использовать
 ; функции ЭВРИКИ INTEG	(интеграл) и DERIV (производная),
 ; а также включен пример вывода графика
 ; функции.

A(x) :=	(cos(x))^2
B(x) :=	sin(x)
C(x) :=	cos(x/2)

D(x) :=	A(x) + B(x) + C(x)
D(dd1) = 0 : 0 < dd1 < 10
D(dd2) = 0 : dd2 := -1

Ap(x) := deriv((cos(x))^2, x)
Bp(x) := deriv(sin(x), x)
Cp(x) := deriv(cos(x/2), x)
Dp(x) := deriv((cos(x))^2+sin(x)+cos(x/2),x)

Ap(ap) = 0
Bp(bp) = 0
Cp(cp) = 0
Dp(dp) = 0

Dint1 =	integ(D(x),x,0,5)
Aint1 =	integ(A(x),x,0,5)

Пример 11.
; В этом примере показано как использовать встроенную
; финансовую функцию PAYMT для расчета месячного платежа
; по 30-летнему	закладу	в 150 000 $ с минимальной
; оплатой в 20 000 $ и годовой процентной ставкой
; в 13%.

; В этой проблеме показано также использование
; встроенной функции FVAL для расчета части суммы заема,
; оставшейся после удовлетворения претензий кредитора
; по достижении	100 000	$, а также для расчета баланса
; заема	через некоторое	время.

; Примечание: такие задачи существуют для рынка
; стран	Запада.

$ finansmooth =	yes

; Переменные, назначенные для заданной даты
DownPay	= 20000
Loan = 180000
Duration = 30 *	12

; Вычисление месячной процeнтной ставки	из годовой
Yrate =	0.13
Mrate =	Yrate /12

; Нахождение месячного платежа

			    42


Payment	= PAYMT(Mrate,Duration,Loan-DownPay,0)

; Формула для вычисления остатка заема через заданное время
FutureValue(GivenMonth):=FVAL(Mrate,_GivenMonth,Loan-DownPay,Payment)
   Equity(GivenMonth) := Loan +	FVAL(Mrate,GivenMonth,Loan-DownPay,Payment)
   Equity(HowSoon) = 100000

; Формула для вычисления общей суммы платы
; до конца срока заема

TotalPaid = Payment * Duration

; Amount still owed on loan at any given month

AmtOwed(GivenMonth) := Loan - Equity(GivenMonth)

Пример 12.
; В этом примере иллюстрируется	пример максимизации
; нелинейной функции при условии удовлетворения	функции
; и переменных различным ограничениям. Заметьте, что
; максимизируется переменная А,	которая	зависит	от
; переменных x,	y, z, a	и b согласно первого уравнения.

$ max (A)

; область максимизации ограничена большими кодами
A = (x*y + a*b + x*z) =	B + x*z
B = (x*y + a*b)
B < 3000

; эстетическое ограничение
x > b/3
x < b/2

; резeрвирование места
y*(b-x)	> 1500

; противодействие и большая эстетика
b< 68  : b > 40
y+a < 100  : y+a > 56
z = a +	y/2
a > y/2

; начальные значения
b:=68
y:=56

Пример 13.
; В этом примере показано как использовать встроенную
; функцию INTEG	для вычисления определенного интеграла.
; В примере исследуется	распределения подоходного налога.

; Функция распределения	подоходного налога (неидеальная
; кривая Лоренца)
y(x) :=	(20/21)*x^2 + (1/21)*x

			    43


Num = integ((20/21)*x^2	+ (1/21)*x, x, 0, 1)
Denom =	integ(x,x,0,1)

; коэффициент неравенства:
CoeffInEq = Num/Denom

Пример 14.
; В этом примере показано как ЭВРИКА может итеративно
; решать систему нелинейных уравнений, после
; инициализации	итераций.

; Система нелинейных уравнений:

x^2 + a^2 = 45^2
x^2 + b^2 = 35^2
y/10 = x/b
(x-y)/10 = x/a

;Инициализация:

x:= 10
y := 10
a :=20
b:=20

; Ограничения

a>0
b>0
x>0
x>y
y>0

; Точное решение :  x =	31.817459, y = 21.819934
; и a =	31.822151, b = 14.582500

Пример 15.
; В этом примере показана способность ЭВРИКИ решать
; систему нелинейных уравнений.	Эти уравнения описывают
; силовые линии	поля в системе четырех параллельных
; компланарных силовых линий, выстроенных в
; электрическом	поле.

1/(a-b)	+ 1/(a-c) + 1/a	= 1

1/(b-a)	+ 1/(b-c) + 1/b	= 1

1/(c-a)	+ 1/(c-b) + 1/c	= 1

Пример 16.
; Пример задачи	линейного программирования демонстрирует
; способность ЭВРИКИ решать одновременно линейные уравнения
; многих переменных и максимизировать целевую функцию в
; порядке предела досягаемости оптимального решения.

			    44



; Целевая функция

    Profit = (4*x) + (6*y)

$ max (Profit)

    x >	0 ;
    y >	0 ;

    x := 90
    y :=80

2*x + y	< 180 ;	обшее время машины А не	должно превысить 180
x + 2*y	< 160 ;	общее время машины В не	должно превысить 160
x + y <	100 ; общее время машины С не должно превысить 100

Пример 17.
; В этом примере показана способность ЭВРИКИ находить
; значения ограничений для функции, что	делает функцию
; более	пригодной для эмпирических данных. Т.к.	файл уравнений
; включает директиву $ substlevel = 0, то ЭВРИКА использует
; метод	наименьших квадратов, годный для нахождения функции
; (требуемой формы), которая дает лучшую пару точек
; x, (f(x).

; В этом примере для функции
;	f(x) :=	EXP(a *	x^N + B)
; идеальным решением являются -	 a = 0.25, b = 0.15 и
; N = 1.5

f(x) :=	EXP(A *	x^N + B)

f(1) = 1.49
f(2) = 2.35
f(3) = 4.26
f(4) = 8.59
f(5) = 19.01

$ substlevel = 0

Пример 18.
$ min (T)

T = 980*(x + y + z) + 6400*(1/x	+ 1/y +	1/z + 2/(y-x) +
    2/(z-x) + 2/(z-y))

T > 0
T := 29000
x > 0
x := 2 [cm]
y > x
y := 5 [cm]
z > y
z := 10	[cm]

			    45


y-x > 0
z-x > 0
z-y > 0

Пример 19.

; В этом примере показано как использовать
; директивы ЭВРИКИ $max	и $min для максимизации
; и минимизации	некоторых переменных, которые
; определяют результат заданной	функции.
; Один из этих примеров	также демонстрирует
; как ЭВРИКА решает интегральные уравнения.


; Примечание: для решения одного из данных
; примеров требуется убрать символ ";" из
; начала каждой	строки уравнений данного
; примера. ЭВРИКА допускает использование в
; файле	уравнений только одной из директив
; $min или $max. Перед решением	другого	примера
; вставьте символ ";" в	начало каждой строки
; уравнений предыдущего	решенного примера.

; Часть	1: Уже хорошо знакомый пример:

; F(z) := sin(z)/z

; Проблема 1-a:
; $min (K)
; K = F(z)
; 0.1 <	z < 10

; Проблема 1-b:
; $max(L)
; L = F(z)
; -10 <	z < -4

; Часть	2:  Интеграл  Sin(x) dx

; Проблема 2-a:
; Решение интегрального	уравнения: какая
; точка	x > 0 позволяет	интегралу функции
; [sin(x) da] находиться в пределах числа 1?
; (Пусть w/2 равно x.)

; 1.000	= integ(sin(a),	a, 0, w/2)
; w/2 =	x

; Проблема 2-b:
; Максимизация:	какая точка x .	0 позволяет
; интегралу функции [sin(a) da]	достигнуть
; максималного значения?

; $max (I)
; I = MaxInt(a)

			    46


; MaxInt(a) := integ(sin(a), a,	0, x)

; Часть	3:  Max	и Min функции Sin(x)

; Проблема 3-a:
; Максимизация:	в какой	точке c	в диапозоне
; от -4	д0 4 функция sin(c) достигает
; максимума?  (Примечание: функция S(c)
; включена с целью вывода графика)


; $max(z)
; z = S(c)
; S(c) := sin(c)
; -4 < c < 4
; d = 2*c

; Проблема 3-b:
; Минимизазия:	в какой	точке a	в диапозоне
; от -4	до 4 функция sin(a) достигает
; минимума?  (Примечание: функция S(a)
; включена с целью вывода графика)


; $min(y)
; y = S(a)
; S(a) := sin(a)
; -4 < a < 4
; b = 2*a

Пример 20.
; В этом примере демонстрируются возможности  функции
; Poly (полином), которая находит корни	полинома N-го
; порядка одной	переменной.

; При решении полинома одной переменной	с комплексными
; корнями нельзя изменять установку "Complex" на "ДА".
; ЭВРИКА автоматически находит комплексные корни, если
; используется функция Poly.

; Все корни действительные
; R(x) = (1*x^4	- 2*x^3	- 13*x^2 + 14*x	+24)

R(x) :=	poly(x,1,-2,-13,14,24)

; Все корни комплексные	- ЭВРИКА решает	для действительной
; части	существующего корня меньшего или равного 1

S(x) :=	poly(x,1,-2,5)
T(x) :=	poly(x,2,3,9)

; Комплексные и	действительные корни

U(x) :=	poly(x,2,-1,13,-3,45)
V(x) :=	poly(x,2,-5,-3,-36)

			    47


; Некоторые коэффициенты равны нулю - они должны
; быть введены

W(x) :=	poly(x,3,0,5,0,-7,24)
P(x) :=	poly(x,1,0,0,0,0,1)

Пример 21.
; Этот пример демонстрирует решение типичной задачи по
; баллистике и преобразование единиц измерения.

c = ((k*V + g)/(g*k))  ; промежуточная константа для
		       ; упрощения уравнения   T
k = 0.1		       ; коэффициент торможения
V = 35355
V := 35355 [cm/sec]    ; определение единицы измерения
g = 980		       ; сила гравитации

T = c*(1 - exp(-k*T))  ; решение для общего времени полета
T := 40	[sec]
R = (V/k)*(1 - exp(-k*T))  ; решение для проектируемого	диапозона
R := 1 [cm]

$ units
  cm ->	feet : x/ (2.54*12)
  cm/sec -> feet/sec : x / (2.54*12)
  feet -> miles	: x/ 5280
  feet/sec -> miles/hour : x / (5280/3600)
$ end

